# @example=### Basic example
# name: "Simple example"
# on:
#   push:
#     branches: [ main ]
# jobs:
#   test:
#     uses: gizumon/reusable-workflow-documentator/.github/workflows/reusable-workflow-documentator.yml@main
#     with:
#       filepath: .github/docs/reusable-workflow-doc.md

# @example=### Advanced example (GHES support)
# name: "Example"
# on:
#   push:
#     branches: [ main ]
# jobs:
#   test:
#     uses: gizumon/reusable-workflow-documentator/.github/workflows/reusable-workflow-documentator.yml@main
#     with:
#       filepath: .github/docs/reusable-workflow-doc.md
#       overwrite: false
#       make-pull-request: true
#       github-base-url: "https://some-enterprise.github.com/api/v3"

name: Reusable Workflow Documentator
on:
  workflow_call:
    inputs:
      filepath:
        required: true
        type: string
        default: README.md
        description: "Filepath to write the reusable workflow documentation. (default: README.md)"
      github-base-url:
        type: string
        required: false
        default: "https://api.github.com"
        description: "GitHub Host domain (Support for GitHub Enterprise) (default: https://api.github.com)"
      overwrite:
        required: false
        type: boolean
        default: false
        description: "If true, overwrite the filepath file. (default: false)"
      make-pull-request:
        required: false
        type: boolean
        default: false
        description: "If true, make a pull request to ref branch. If false, directly push generated doc to ref branch. (default: false)"
      # generate-only:
      #   required: false
      #   type: boolean
      #   default: false
      #   description: "Generate document and set output result only. (default: false)"
    outputs:
      document:
        description: "Reusable workflow markdown document"
        value: "${{ jobs.documentation.outputs.document }}"
      agenda:
        description: "Reusable workflow agenda"
        value: "${{ jobs.documentation.outputs.agenda }}"
    secrets:
      ACCESS_TOKEN:
        required: true
        description: "GitHub Personal Access Token"
env:
  GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
jobs:
  documentation:
    name: Generate reusable workflow document
    runs-on: ubuntu-latest
    outputs:
      document: ${{ steps.documentator.outputs.document }}
      agenda: ${{ steps.documentator.outputs.agenda }}
    steps:
      - uses: actions/checkout@v2
      - name: Reusable Workflow Documentator Action
        id: documentator
        uses: ./
        with:
          filepath: ${{ inputs.filepath }}
          github-base-url: ${{ inputs.github-base-url }}
          # overwrite: ${{ inputs.overwrite }}
          # make-pull-request: ${{ inputs.make-pull-request }}
          # generate-only: ${{ inputs.generate-only }}

      - name: Add a new file
        id: changes
        run: |
          if ${{ inputs.overwrite }}; then
            echo '${{ steps.documentator.outputs.document }}' > ${{ inputs.filepath }}
          else
            num=$(grep -n "@overwrite-anchor" ${{ inputs.filepath }} | awk -F ':' '{print $1}' | head -n 1)
            if [ -n "${num}" ]; then
              # Remove the lines that was generated by the previous action
              sed -e "${num},\$d" ${{ inputs.filepath }}
            fi
            echo '${{ steps.documentator.outputs.document }}' >> ${{ inputs.filepath }}
          fi
          echo "::set-output name=count::$(git diff --name-only | wc -l)"
          git add ${{ inputs.filepath }}

      - name: Update document
        if: ${{ steps.changes.outputs.count > 0 }}
        run: |
          echo "Changes files count = ${{ steps.changes.outputs.count }} ..."
          git config user.name github-actions
          git config user.email github-actions@github.com
          git commit -m "⚙ Commit by Reusable workflow documentator"
          if ${{ inputs.make-pull-request == false }}; then
            if ${{ github.event_name == "pull_request" }}; then
              echo "push to ${{ github.head_ref }} ... (event:pull_request)"
              git push origin main ${{ github.head_ref }}
            else
              echo "push to ${{ github.ref_name }} ... (event:push)"
              git push origin ${{ github.ref_name }}
            fi
          fi

      - name: Create New Pull Request If Needed
        if: ${{ steps.changes.outputs.count > 0 }} && ${{ inputs.make-pull-request == true }}
        uses: peter-evans/create-pull-request@v3
        with:
          title: "📝 Auto generated reusable workflow documentation"
          branch-suffix: timestamp
          commit-message: "⚙ Commit by Reusable workflow documentator"
          body: 'Generated document ↓\n---\n${{ steps.documentator.outputs.document }}'
